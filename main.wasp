app phraseTutor {
  wasp: {
    version: "^0.13.0"
  },
  head: [
    "<script defer data-domain=\"phrasetutor.com\" src=\"http://plausible.apps.twoducks.dev/js/script.js\"></script>"
  ],
  title: "Phrase Tutor",
  auth: {
    userEntity: User,
    externalAuthEntity: SocialUser,
    methods: {
      google: {
        userSignupFields: import { userSignupFields } from "@src/auth/google.js"
      }
    },
    onAuthFailedRedirectTo: "/"
  },
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    system: PostgreSQL,
    seeds: [
      import { seedItalianPhrases } from "@src/seeds.js"
    ]
  }
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import Main from "@src/pages/Home/HomePage.jsx"
}
route StatsRoute { path: "/stats", to: StatsPage }
page StatsPage {
  component: import Main from "@src/pages/Stats/StatsPage.jsx"
}

query fetchAllPhrases {
  fn: import { getAllPhrases } from "@src/queries.js",
  entities: [Phrase]
}

query fetchLanguages {
  fn: import { getLanguages } from "@src/queries.js",
  entities: [Language]
}

entity User {=psl
  id Int @id @default(autoincrement())
  username String @unique
  password String
  profilePicture String
  externalAuthAssociations SocialUser[]
  createdAt DateTime @default(now())
psl=}

entity SocialUser {=psl
  id          Int       @id @default(autoincrement())
  provider    String
  providerId  String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  createdAt   DateTime  @default(now())
  @@unique([provider, providerId, userId])
psl=}

entity Phrase {=psl
  id Int @id @default(autoincrement())
  group String
  phrase String
  translations Translation[]
psl=}

entity Language {=psl
  id Int @id @default(autoincrement())
  name String @unique
  emoji String
  translations Translation[]
psl=}

entity Translation {=psl
  id Int @id @default(autoincrement())
  phraseId Int
  languageId Int
  translation String
  phrase Phrase @relation(fields: [phraseId], references: [id], onDelete: Cascade)
  language Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
psl=}

api migrateGoogle {
  httpRoute: (GET, "/migrate-google"),
  fn: import { migrateGoogleHandler } from "@src/migrateToNewAuth",
  entities: []
}